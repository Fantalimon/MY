<?php

/*Работа с %

1. Даны переменные $a = 10 и $b = 3. Найдите остаток от деления $a на $b.*/

$a=10;
$b=3;
$q=$a%$b;
$r=$a-($b*$q);
echo "Остаток от деления $a / $b = ".$r;
echo "<br>";
/*
2. Даны переменные $a и $b. Проверьте, что $a делится без остатка на $b. Если это так — выведите 'Делится' и результат деления, иначе выведите 'Делится с остатком' и остаток от деления.*/

$A=rand(5,25);
$B=rand(10, 25);
$AB = $A/$B;
$Q=$A%$B;
$R=$A-($B*$Q);
if ( $Q == 0)
{
    echo 'Делится = '.$AB;
}
elseif ($Q!== false)
{
    echo 'Делится с остатком = '.$R;
}

/*Работа с модулем

3. Даны переменные $a и $b. Найдите найдите модуль разности $a и $b. Проверьте работу скрипта самостоятельно для различных $a и $b.*/

$a=rand(-101,50);
$b=rand(-10,10);
$c=$a-$b;
echo  $a."-".$b." = ".abs($c);

/*4. Даны переменные $a и $b. Отнимите от $a переменную $b и результат присвойте переменной $c. Сделайте так, чтобы в любом случае в переменную $c записалось положительное значение. Проверьте работу скрипта при $a и $b, равных соответственно 3 и 5, 6 и 1.*/

$a=rand(-101,50);
$b=rand(-10,10);
$c=$a-$b;
echo  $a."-".$b." = ".abs($c);

/*Работа со степенью и корнем

5. Возведите 2 в 10 степень. Результат запишите в переменную $st.*/

$st=2**10;
echo $st;

/*6. Найдите квадратный корень из 245.*/

echo sqrt (245);

/*7. Дан массив с элементами 4, 2, 5, 19, 13, 0, 10. Найдите квадратный корень из суммы квадратов его элементов. Для решения воспользуйтесь циклом foreach.*/

$arry=[4, 2, 5, 19, 13, 0, 10];

$count = count($arry);
$b=0;
foreach ($arry as $value)
{
    $a=$value**2;
    $b=$a+$b;
}
echo sqrt($b);

/*Работа с функциями округления

8. Найдите квадратный корень из 379. Результат округлите до целых, до десятых, до сотых.*/

$a=379;
$b=sqrt($a);
echo ceil($b)."<br>";
echo round($b,2)."<br>";
echo round($b,3)."<br>";

/*9. Найдите квадратный корень из 587. Округлите результат в большую и меньшую сторону, запишите результаты округления в ассоциативный массив с ключами 'floor' и 'ceil'.*/

$a=587;
$b=sqrt($a);
$ceil = ceil($b);
$floor = floor($b);
$arr=['ceil'=>$ceil,'floor'=>$floor];
print_r($arr);

/*Работа с min и max

10. Даны числа 4, -2, 5, 19, -130, 0, 10. Найдите минимальное и максимальное число.*/

$arr = [4, -2, 5, 19, -130, 0, 10];
    $min=min($arr);
    $max=max($arr);
echo 'min : '.$min."<br>";
echo 'max : '.$max;

/*Работа с рандомом

11. Выведите на экран случайное число от 1 до 100.*/

$som_num=rand(1,100);
echo $som_num."<br>";
echo "<br>";
echo "<br>";
echo "<br>";
echo "<br>";
/*12. Сделайте так, чтобы каждый раз при обновлении страницы на экран выводилась случайным образом одна из трех картинок.*/

$one= fopen("http://perilman.com.ua/images/PHP7.jpg","r");
$too=fopen("http://perilman.com.ua/images/css3.jpg","r");
$tree=fopen("http://perilman.com.ua/images/html-5-wallpapers.jpg","r");

$arr=[1=>$one,2=>$too,3=>$tree];

$rnd=rand(1,3);
print_r($arr[$rnd]);


echo "<br>";
echo "<br>";
echo "<br>";
echo "<br>";
/*13. Заполните массив 10-ю случайными числами. (Подсказка: нужно воспользоваться циклами for или while).*/

$arry=[];
for ($i=0;$i<=10;$i++)
{
    $arry[$i]=rand(-100,100);
}
print_r($arry);


/*Общие задачи

//14. Напишите скрипт, который будет находить корни квадратного уравнения.*/


$a=rand(-100,100);
$b=rand(-100,100);
$c=rand(-100,100);
echo $a."x^2".'+'."$b"."x".'+'."$c".'=0';
$D=$b**2-4*$a*$c;
if ($D<0)
{
    echo "<br>"."Корней НЕТ"."<br>";
    echo "Спасибо завнимание :)";
}
elseif($D==0)
{
    echo "<br>"." Есть один корень"."<br>";
    $x1=-$b+sqrt($D)/2*$a;
    echo abs($x1)."<br>";
    echo "Спасибо завнимание :)";
}
elseif ($D>0)
{
    echo "<br>"."Корней Уравненьевич вам 2"."<br>";

    $x1=-$b+sqrt($D)/2*$a;
    $x2=-$b-sqrt($D)/2*$a;
    echo $x1."<br>";
    echo $x2."<br>";
    echo "Спасибо завнимание :)";
}


/*15. Напишите скрипт, который   будет находить факториал числа. Факториал — это произведение всех целых чисел, меньше данного. Например, 4! = 1*2*3*4 = 24.*/

function fack($n = 4)
{
    if ($n ==0)return 1;
return $n*fack($n-1);
}
echo fack(5);


/*16. Напишите скрипт, который проверяет, является ли данное число простым (простое число — это то, которое делится только на 1 и на само себя).*/

function simple ($n = 5)
{
$count=0;
for ($i=1;$i<=$n;$i++)
{
    $simple_or_not = $n / $i;
    if (is_int($simple_or_not))
    {
        $count=$count+1;
    }
}
    if ($count > 2){
                    echo "Число не очень простое"."<br>";
        echo "За столько раз проверил ".$count;
                      }
    else{
        echo "Число простое = $n"."<br>";
        echo "За столько раз проверил ".$count;
        }
}
simple(1000);

    
/*17. Дан массив $arr. Найдите среднее арифметическое его элементов. Подсказка: количество элементов массива можно подсчитать функцией count. Проверьте задачу на массиве с элементами 12, 15, 20, 25, 59, 79.*/

$arr = [12, 15, 20, 25, 59, 79];
$ctn = 0;
$b=0;
foreach ($arr as $value)
{
    $a=$value;
    $b=$a+$b;
    $ctn++;
}
 $summ_elem=$ctn+$b;
echo $summ_elem."<br>";


/*18. Напишите скрипт-калькулятор единого налога. Налог считается так: если вы заработали менее, чем ставка $stavka этого налога, умноженная на 30 — то платите ставку. Если же вы заработали более, чем 30*$stavka, то платите не только ставку налога, но и 5% от той суммы, на которую вы превысили 30*$stavka.*/

$ZP=100000;
$stavka =2200;
$banda=30*$stavka;
if ($banda>$ZP)
{
    echo "Надо уплатить : $stavka";
}
elseif ($banda<$ZP)
{
   $GOSUDARSTO=$ZP-$banda;
   $OXYGE=($GOSUDARSTO*0.005)+$stavka;
    echo "Сегодня надо уплатить, чуть больше: $OXYGE ";
}

/*19. Напишите скрипт-калькулятор оплаты за электроэнергию. Сумма считается так: если вы потратили за месяц менее 150 киловатт, то сумма считается по одной ставке $summ1 за 1 киловатт, всё, что больше 150 и меньше 300 киловатт считается по ставке $summ2, а все киловатты после 300 — по ставке $summ3.*/

$your_Watt=600;

$no_more_limit=150;
$midle_limit=300;

$summ1=1.75;
$summ2=2.75;
$summ3=5.00;


if ($your_Watt<=$no_more_limit)
{
    echo "Summ for pay:".$your_Watt*$summ1."<br>";
}
elseif($your_Watt>$no_more_limit && $your_Watt<$midle_limit)
{
    echo "Middle tarif for pay:".$summ2*$your_Watt."<br>";
}
elseif ($your_Watt > $midle_limit)
{
    echo " PAY FOR FOOL = ".$your_Watt*$summ3." your need somday, off your komputer"."<br>";
}

/*20. Напишите скрипт, который найдет все простые числа в заданном промежутке. Проверьте его работу на промежутке от 1 до 1000.*/

function simple2 ($n = 1 )
{
    $count=0;
    for ($i=1;$i<=$n;$i++)
    {
        $simple_or_not = $n / $i;
        if (is_int($simple_or_not))
        {
            $count=$count+1;
        }
    }
    if ($count == 2)
    {echo "Число простое = $n"."<br>";}
}
simple2();

for ($begin=1;$begin<=100;$begin++)
{
    simple2($begin);
}


/*21. Напишите скрипт, который будет находить тройки целых чисел, удовлетворяющих теореме Пифагора.*/


function find_Pifagor($c,$a,$b)
{
    if ($c ** 2 == $a ** 2 + $b ** 2) {
        echo "<br>" . "ОПА НАШЛИ!!!!!!" . "<br>";
        echo "c = $c " . "<br>";
        echo "a = $a " . "<br>";
        echo "b = $b " . "<br>";
    }
}

for ($c=1;$c<=30;$c++)
{
    for ($a=1;$a<=30;$a++)
    {
        for ($b=1;$b<=30;$b++)
        {
            find_Pifagor($c, $a, $b);
        }
    }

}





