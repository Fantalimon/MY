<?php
///*Работа с регистром символов*/
//
///*1. Дана строка 'Привет, мир!'. Сделайте из нее строку 'ПРИВЕТ МИР!'.*/
//
//$str = "Привет, мир!";
//$show_str=mb_strtoupper($str);
//echo $show_str;
//
//
///*2. Дана строка 'PHP'. Сделайте из нее строку 'php'.*/
//
//$str='PHP';
//echo mb_strtolower($str);
//
///*3. Дана строка 'москва'. Сделайте из нее строку 'Москва'.*/
//
//$str='харьков';
//echo ucfirst($str);
//
//
///*4. Дана строка 'МОСКВА'. Сделайте из нее строку 'Москва'.*/
//
//$str='ХАРЬКОВ';
//echo mb_strtolower(ucfirst($str));
//
///*Работа с strlen, substr*/
//
///*6. Дана строка 'я учу PHP!'. Найдите количество символов в этой строке.*/
//
//echo mb_strlen('я учу PHP!');
//
///*7. Дана строка 'я учу PHP!'. Вырежьте из нее слово 'учу' и слово 'PHP'.*/
//
//$str='я учу PHP!';
//echo substr($str,3, 6);
//echo substr ($str, -4);
//
//
///*8. Дана переменная $str, в которой хранится какой-либо текст. Реализуйте обрезание длинного текста по следующему принципу: если количество символов этого текста больше заданного в переменной $n, то в переменную $result запишем первые $n символов строки $str и добавим в конец многоточие '...'. В противном случае в переменную $result запишем содержимое переменной $str.*/
//
//function obrezanie($n = 100)
//{
//    $result='';
//    $str = 'Какой либо текст придуманный от балды.';
//    $str_l=mb_strlen($str)-1;
//    if($n<$str_l)
//    {
//         $result=mb_substr($str, 0,$n)."...";
//    }
//    else { $result=$str; }
//
//    return $result;
//}
//$go_to_next=obrezanie(4);
//
///*10. Создайте переменную $password. Присвойте переменной $password результат функции из предыдущего примера. Если количество символов пароля больше 5-ти и меньше 10-ти, то выведите пользователю сообщение о том, что пароль подходит, иначе сообщение о том, что нужно придумать другой пароль.*/
//
//$password=$go_to_next;
//$min=(mb_strlen($password)-1);
//$max=(mb_strlen($password)-1);
//if($min>5 && $max<=10)
//{echo "<h1>".'Пароль подходит'."</h1>";}
//else {echo "<h1>".'Пароль не годится!!!'."</h1>";}
//
//
//
///*11. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно столько рядов, чтобы последний элемент пирамидки состоял из одного символа. Первый ряд пирамиды должен хранится в переменной $str (может иметь различное количество символов). Подсказка: воспользуйтесь функциями strlen и substr.
//
//xxxxxxxxxx
//xxxxxxxxx
//xxxxxxxx
//xxxxxxx
//xxxxxx*/
//
//$str='xxxxxxxxxx';
//for ($i=strlen($str)-1;$i>=1;$i--)
//{
//    $next=mb_substr($str, 0 , $i);
// echo $next."<br>";
//
//}
//
//
//
//
///*Работа с str_replace*/
//
///*12. Дана строка 'Я-учу-PHP!'. Замените все дефисы на тег '<br>'.*/
//
//$str_from_dz='Я-учу-PHP!';
//$replased=str_replace('-','<br>',$str_from_dz);
//echo $replased;
//
///*13. Дана строка '31.12.2013'. Замените все точки на дефисы.*/
//
//$str_from_dz2='31.12.2013';
//$replased2=str_replace('.','-',$str_from_dz2);
//echo $replased2;
//
///*14. Дана строка $str. Замените смайлики ':)', ':(', '^-^', которые встречаются в этой строке на соответсвующие картинки (<img src=''>).*/
//
//$smileK=[':)', ':(', '^-^'];
//$img=["<img src='smile'>","<img src='sad'>","<img src='waw'>"];
//$changed=str_replace($smileK,$img,$smileK);
//print_r ($changed);
//
///*15. Дана переменная $str, в которой хранится строка русского текста. Напишите скрипт, который запишет транслит этого текста в переменную $translit. Напишите также скрипт, который выполнит обратную операцию.*/
//
//$str='Строка Русского текста, ну прям москльского москальского';
//
//function greate_trans ($str , $to_translit='eng')
//{
//    $TRS=['а','б', 'в','г','д','е','ё','ж','з','и','й','к','л','м','н','о','п','р','с','т','у','ф','х','ц','ч','ш','щ','ъ','ы','ь','э','ю','я'];
//
//    $TRS_ENG=['a','b','v','g','d','e','e','g','z','i','i!','k','l','m','n','o','^p','r','s','t','u','f','h','ce','ch','sha','s`ha','`','~',',','eth','you','ya'];
//        if($to_translit ==='eng')
//        {$to_translit = str_replace($TRS,$TRS_ENG,$str);}
//        else {$to_translit=str_replace($TRS_ENG,$TRS,$str);}
//
//    return $to_translit;
//}
//echo greate_trans($str,'ru');
//
///*Работа с explode, implode*/
//
///*16. Дана строка 'я учу PHP!'. С помощью функции explode запишите каждое слово этой строки в отдельный элемент массива.*/
//
//
//$str='я учу PHP!';
//
//$explarra=explode(" ",$str);
//print_r($explarra);
//
///*17. Дан массив с элементами 'html', 'css', 'php', 'js'. С помощью функции implode создайте строку из этих элементов, разделенных запятыми.*/
//
//$arr=['html', 'css', 'php', 'js'];
//echo  implode(', ',$arr);
//
///*18. В переменной $date лежит дата в формате '2013-12-31'. Преобразуйте эту дату в формат '31.12.2013'.*/
//
//$date=strtotime('2013-12-31');
//$pereformat=date("d.m.Y",$date);
//echo $pereformat;
//
///*19. В переменной $date лежит дата в формате '31.12.2013'. Преобразуйте эту дату в формат '2013-12-31'.*/
//
//$date='31.12.2013';
//$newformat = str_replace('.',"-",$date);
//echo $newformat;
//
///*Работа с trim, ltrim, rtrim*/
//
///*20. Дана строка ' php '. Сделайте из нее 3 разных строки с помощью функций класса trim: 'php', ' php', 'php '.*/
//
//$str=' php ';
//echo ltrim($str);
//echo rtrim($str);
//echo trim($str);
//
//
///*Работа с strip_tags и htmlspecialchars*/
//
///*21. Дана строка 'html, <b>php</b>, js'. Удалите теги из этой строки.*/
//
//$str='html, <b>php</b>, js';
//echo $str."<br>";
//echo strip_tags($str)."<br>";
//
///*22. Дана строка 'html, <b>php</b>, js'. Выведите ее на экран 'как есть': то есть браузер не должен преобразовать <b> в жирный.*/
//
//echo htmlspecialchars($str);
//
//
///*Работа с chr и ord*/
//
///*23. Узнайте код символов 'a', 'b', 'c', пробела.*/
//
//echo ord('a')."<br>";
//echo ord('b')."<br>";
//echo ord('c')."<br>";
//echo ord(' ')."<br>";
//
//
///*24. Изучите таблицу ASCII. Определите границы, в которых располагаются буквы английского алфавита. Выведите на экран символ с кодом 33.*/
//
//echo chr('33');
//
///*25. Запишите в переменную $str случайный символ — большую букву латинского алфавита. Подсказка: с помощью таблицы ASCII определите какие целые числа соответствуют большим буквам латинского алфавита.*/
//
//$ramdTABLcod=rand(14,127);
//$str=chr("$ramdTABLcod");
//echo $str;
//
//
//
///*26. Запишите в переменную $str случайную строку $len длиной, состоящую из маленьких букв латинского алфавита. Подсказка: воспользуйтесь циклом for или while.*/
//
//$l=rand(5,45);
//$str='';
//for($i=0;$i<$l;$i++)
//{
//    $ASC_simbols = rand(97,122);
//    $L_rand=chr("$ASC_simbols");
//    $str.=$L_rand;
//}
//
//echo $str;
//
///*Работа с substr_count, str_word_count, str_split*/
//
///*27. Дана строка 'Мама мыла раму'. Узнайте количество букв 'a' и 'м', входящих в эту строку.*/
//
//$str='Мама мыла раму';
//$get_smbols_a= substr_count($str,'а');
//$get_smbols_m= substr_count($str,'м');
//echo "а - ".$get_smbols_a."<br>";
//echo "м - ".$get_smbols_m;
//
//
///*28. Скопируйте весь текст со страницы php.su, запишите его в переменную $str. Подсчитайте количество символов и количество слов в даннной строке.*/
//$str="
//
//   PHP.SU
//
//
//
//FORUM.PHP.SU
//  Главная   	  Статьи   	Изучение PHP 	Функции PHP 	FAQ 	PHP скрипты 	MySQL 	Установка 	Учебники 	Уроки 	Download 	  Форум
//
//  Основы PHP
//  Что такое PHP?
//  Возможности PHP
//  Преимущества PHP
//  История развития
//  Что нового в PHP5?
//  «Движок» PHP
//  Переход на PHP 5.3
//New Переход на PHP 5.6
//  Введение в PHP
//  Изучение PHP
//  Основы CGI
//  Синтаксис PHP
//  Типы данных PHP
//  Переменные в PHP
//  Константы PHP
//  Выражения PHP
//  Операторы PHP
//  Конструкции PHP
//  Ссылки в PHP
//  PHP и ООП
//  Безопасность
//  Функции PHP
//  Функции по категориям
//  Функции по алфавиту
//  Стандартные функции
//  Пользовательские
//  PHP и HTTP
//  Работа с формами
//  PHP и Upload
//  PHP и Cookies
//  PHP и базы данных
//  PHP и MySQL
//  Документация MySQL
//  Учебники
//  Учебники по PHP
//  Учебники по MySQL
//  Другие учебники
//  Уроки PHP
//  Введение
//  Самые основы
//  Управление
//  Функции
//  Документация
//  Математика
//  Файлы
//  Основы SQL
//  Дата и время
//  CURL
//  Изображения
//  Стили
//  Безопасность
//  Установка
//  Проектирование БД
//  Регулярные выражения
//  Подготовка к работе
//  Быстрый старт
//  Установка PHP
//  Установка MySQL
//  Конфигурация PHP
//  Download / Скачать
//  Скачать Apache
//  Скачать PHP
//  Скачать PECL
//  Скачать PEAR
//  Скачать MySQL
//  Редакторы PHP
//  Полезные утилиты
//  Документация
//  PHP скрипты
//  Скачать скрипты
//  Инструменты
//  PHP в примерах
//  Новости портала
//
// Добро пожаловать на портал по PHP, MySQL и другим веб-технологиям!
//
// Все о PHP, MySQL и не только !
//
//Спасибо за посещение нашего портала! Мы создали достаточно крупный ресурс по PHP, MySQL и другим веб-технологиям. Надеемся на то, что представленная на страницах портала информация будет Вам полезна. Приходите к нам чаще!
//(( Сделать домашней ))    (( Добавить в избранное ))
// Релизы PHP
//
//    Стабильный PHP 5.6 (5.6.18)  tar.bz2 | tar.gz | tar.xz | for Windows
//    Стабильный PHP 5.5 (5.5.32)  tar.bz2 | tar.gz | tar.xz | for Windows
//    Стабильный PHP 5.4 (5.4.45)  tar.bz2 | tar.gz | tar.xz | for Windows
//    Released PHP 7.0 (7.0.3)  tar.bz2 | tar.gz | tar.xz | for Windows
//
//    Стабильный MySQL 5.7 (5.7.11)
//
// PHP для начинающих и продвинутых веб-программистов
//
//Уроки PHP. На основе дискуссий форума PHP.SU.
//
//Вы начинаете изучать PHP? Ознакомьтесь с вводным курсом обучения PHP.
//Так же для новичков наши профессионалы собрали материалы по форуму PHP.SU и разместили это в виде Уроков PHP.
//
//Знаете основы PHP и хотите укрепить свои познания?
//Обратитесь непосредственно к разделу \"Изучение PHP\".
//Рекомендуем также ознакомиться с принципами работы PHP с протоколом HTTP.
//
//Вам также потребуется справочник по всем функциям PHP, полностью на русском.
//Справочник по функциям PHP оснащен системой поиска функций по ключевым словам.
//
//В PHP есть обширные средства для работы с СУБД, такими, как MySQL.
//Вы можете использовать PHP для работы с большим количеством различных типов СУБД.
//
//Наш портал содержит множество статей по PHP, MySQL, Apache, PEAR, регулярным выражениям, XML, другим веб-технологиям.
//Общее число статей на данный момент составляет более 250.
//
//У нас Вы найдете большое количество учебников и справочников по PHP, MySQL, HTML, XML, JavaScript и.т.д.
//
//Для того, чтобы заниматься разработкой PHP скриптов и их отладкой, Вам необходим интерпретатор PHP, а также веб-сервер, например, Apache.
//Если Вы будете создавать скрипты с использованием баз данных, то хорошим выбором будет MySQL.
//Если Вы уже достаточно продвинутый пользователь и хотите самостоятельно установить и сконфигурировать веб-сервер, PHP и MySQL, то Вам в помощь раздел \"Подготовка к работе\".
//
//Раздел \"PHP скрипты\" поможет Вам скачать большое количество различных скриптов PHP.
//
//Раздел \"Download\" поможет Вам скачать необходимые компоненты: PHP, Apache, MySQL, PECL, PEAR, редакторы PHP кода, полезные утилиты для PHP и документацию по PHP, MySQL, PEAR и Apache.
//
//Поиск по сайту
//Поиск информации на портале PHP.SU
//Последние темы форума PHP.SU
//»  Не редиректит (5)
//»  почему выводит три поля, ... (6)
//»  Не правильный подсчет SEL... (3)
//»  foreach (4)
//»  Как посчитать количество ... (5)
//»  Создание папки из скрипта... (1)
//»  Стили с JavaScript (4)
//»  Динамическое изменение id... (0)
//»  Ошибка 500 (1)
//»  Форма обратной связи. (1)
//»  Как сделать выборку тегов... (1)
//»  Почему не отображается ка... (10)
//»  Удаление строки из таблиц... (1)
//»  Yii2 vs Symfony2(3) (1)
//»  Php-developer full stack.... (1)
//
//Если что не понятно, не стестняйтесь,
//задавайте вопросы на нашем форуме.
//Нас уже 18 971 пользователей.
//Задано 53 174 вопросов
//и получено 279 645 ответов и советов.
//Вакансии разработчикам
//»  Php-developer full stack. R&...
//Работа в офисе в г. Москве (м. Авиамоторная) или удаленно (по результа
//
//»  Требуется программист С++ . З/...
//В офис
//
//»  PHP developer
//Москва или удаленно
//
//»  PHP-программист (удаленная работ...
//»  Требуется программист ASP.NET в ...
//работа в офисе
//
//Больше вакансий
//в разделе нашего форума 'Работа'.
//Опросы на PHP.SU
//Какой язык Вы предпочитаете использовать для написания веб-приложений?
//
//PHP
//
//Perl
//
//ASP
//
//JSP
//
//Python
//
//Другой
//
//Результаты опроса
//
//   © 2006 - 2017 PHP.SU | О проекте | Гостевая книга | Обратная связь | Политика проекта | Наши кнопки | Добавить в избранное | sitemap |
//
//Powered by PHP  Powered By MySQL  Powered by Nginx  Valid CSS
// Наши партнеры: В нашем магазине антирадары качественные, надежные и работают действительно адекватно.
//  Рейтинг@Mail.ru
//";
//
//
//$hou_many_word=str_word_count($str);
//echo "Слов вот столько - ".$hou_many_word."<br>";
//
//$hou_many_simbols=strlen("$str");
//echo "Символов вот столько - ".$hou_many_simbols;

/*29. Создайте массив гласных букв. С помощью этого массива подсчитайте количество гласных в строке $str. Результат представьте в виде ассоциативного массива, где ключами будут буквы, а элементами их количество.*/

function str_split_unicode($str, $l = 0) {
    if ($l > 0) {
        $ret = array();
        $len = mb_strlen($str, "UTF-8");
        for ($i = 0; $i <= $len; $i += $l) {
            $ret[] = mb_substr($str, $i, $l, "UTF-8");
        }
        return $ret;
    }
    return preg_split("//u", $str, -1, PREG_SPLIT_NO_EMPTY);
}


$glas=["а", "у", "о", "ы", "и", "э", "я", "ю", "ё", "е"];
$str0="ффф оо ы яя";
$str=strtolower($str0);
$text_mass=str_split_unicode($str);

$ret_mass=[];

    foreach ($glas as $valueglass)
    {
        foreach ($text_mass as $value)
        {
        if($value===$valueglass)
        {
            
            if (isset($ret_mass[$valueglass])){$ret_mass[$valueglass]++;}
           else {$ret_mass[$valueglass]=1;}
        }
        }
     }
print_r($ret_mass);

///*30. Дана строка '1234567890'. Разбейте ее на массив с элементами '12', '34', '56', '78', '90'.*/
//
//$stroka='1234567890';
//
//$exp=str_split($stroka,2);
//print_r($exp);
//
//
///*Работа с str_repeat, strrev
//
//31. Проверьте, является ли пара слов палиндромом (одинаково читается во всех направлениях, кот-ток, нос-сон).*/
//
//$words1='кот';
//$words2='ток';
//function polindr($w1='abccba')
//{
//    $w2=strrev($w1);
//    if ($w1 === $w2 )
//    { echo 'Полиндром'."<br>"; }
//    else { echo 'Увы не полиндром'."<br>"; }
//
//}
//polindr();
//polindr($words2);
//polindr('нос');
//
///*32. Дан массив $arr. Найдите в нем все пары слов-палиндромов (одинаково читаются во всех направлениях, кот-ток, нос-сон). Результат выводите в виде строка формата 'нос — сон'. Проверьте работу скрипта на массиве $arr из примера. Совет: нужно сделать не один, а два цикла.
//
//$arr = array('slon', 'nos', 'tok', 'tak', 'kot', 'pir', 'mir','son', 'rim');*/
//
//$arr = array('slon', 'nos', 'tok', 'tak', 'kot', 'pir', 'mir','son', 'rim');
//
//function polindr2($arr=[])
//{
//
//    foreach ($arr as $w2)
//    {
//        $w1=strrev($w2);
//        if ($w1 === $w2)
//        {
//            echo 'Полиндром   '."    ". $w1 . '-' . $w2 . "<br>";
//        } else
//        {
//            echo 'Увы не полиндром   '."    ". $w1 . '-' . $w2 . "<br>";
//        }
//    }
//
//}
//polindr2($arr);
//
///*33. Определите является ли фраза палиндромом. Примеры: 'A roza upala na lapu Asora'. Обратите внимание на то, что при обратном чтении игнорируются пробелы, запятые, дефисы, тире и большие буквы (подсказка: значит сначала нужно привести строку к стандартному виду — удалить лишние символы, привести все к нижнему регистру).*/
//
//function palindrom_collocation($collocation='ABC CBA')
//{
//    $ministr=strtolower($collocation);
//    $withauthprobel=str_replace(" ","",$ministr);
//
//    $w2=strrev($withauthprobel);
//    if ($withauthprobel === $w2 )
//    { echo 'Полиндром'."<br>".'{'."$withauthprobel".'}'."<br>"; }
//    else { echo 'Увы не полиндром'."<br>".'{'."$withauthprobel".'}'."<br>"; }
//
//
//}
//palindrom_collocation();
//palindrom_collocation('A roza upala na lapu Asora');
//
//
//
//
//
///*34. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 9 рядов, а не 5. Решите задачу с помощью одного цикла и функции str_repeat.
//
//x
//xx
//xxx
//xxxx
//xxxxx*/
//
//
//for ($i=1;$i<=9;$i++)
//{
//    $X=str_repeat("x",$i)."<br>";
//    echo $X;
//}
//
///*35. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 9 рядов, а не 5. Решите задачу с помощью одного цикла и функции str_repeat.
//
//1
//22
//333
//4444
//55555*/
//
//for ($i=1;$i<=9;$i++)
//{
//    $num = str_repeat($i,$i)."<br>";
//    echo $num;
//}




