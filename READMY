Работа с классами

1. Сделайте класс User. Создайте в классе публичное свойство name и два публичных
метода: setName и getName. Создайте экземпляр класса. Используя экземпляр и метод
setName сохраните в свойство name текстовое значение. С помощью экземпляра и метода
getName получите текстовое значение, сохраненное в свойстве name.

2. В тот же класс User добавьте несколько свойств: lastname, email, phone. Создайте по два
публичных метода set... и get... на каждое свойство по аналогии с предыдущим заданием.

3. Добавьте в класс User конструктор, который принимает в качестве параметров firstname,
lastname, email, phone. Каждое свойство сохраните с помощью своей функции set... .

4. Добавьте в класс User метод getUserInfo. В методе должен формироваться массив. В
качестве ключей должны быть свойства класса: firstname, lastname, email, phone. В
качестве значений должны быть значения этих свойств. Значения свойств должны быть
получены с помощью функций get... (getFirstName, getLastName и т.д.).

5. Сделайте класс-калькулятор. Класс должен иметь следующие методы: сложение,
вычитание, умножение, деление. Каждый метод должен принимать в качестве параметров
два числа.

6. Сделайте класс-оболочку над $_SERVER. Класс должен иметь следующие свойства:
request_uri, ip, document_root, http_host, http_user_agent, query_string. Для проверки в
конструктор класса передается переменная $_SERVER и через экземпляр класса
вызывается нужный метод.

7. Сделайте класс-валидатор для $_GET и $_POST.
Класс должен иметь:
- private свойства post и get. Свойствам по-умолчанию присваиваются пустые массивы
- private метод для удаления пробелов (delGaps()) - оболочка над функцией trim
- private метод для удаления тегов (delTags()) - оболочка над strip_tags
- private метод handleRequest для обработки GET и POST массивов. Метод задействует
методы delGaps() и delTags() и заполняет свойства post и get. Метод принимает на вход
параметр request - массив с данными. Метод должен анализировать данные из request
параметра и распределить данные в get и post свойства. Для этого используйте
$_SERVER[‘REQUEST_METHOD’] для определения типа параметра - GET или POST.
Также проверьте массив COOKIE данные которого также могут быть переданы через
массив $_REQUEST (Почитать о массиве $_REQUEST ​
здесь​
)
- public метод для получения всех параметров getParams()
- public метод для получения параметра по ключу getParam($param)
Для проверки: при создании экземпляра класса в конструктор передается массив
$_REQUEST. В конструкторе класса значение передается в метод handleRequest(). Черезэкземпляр класса можно получить либо все массив параметров со значениями getParams() либо
значение конкретного параметра getParam($_GET[‘id’]).
